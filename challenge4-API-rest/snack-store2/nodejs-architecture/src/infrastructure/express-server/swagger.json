{
    "openapi": "3.0.0",

    "info": {
        "version": "2.0",
        "title": "Api REST",
        "description": "Challenge 4, Snack API rest RAVN",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/api/v1",
            "description": "Local Dev, or from Heroku"
        },
        {
            "url": "/api/v1",
            "description": "With docker-compose and nginx proxy"
        }
    ],
    "tags": [
        {
            "name": "Clients",
            "description": "API for Clients in the system"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get all clients in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cats"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create a new client in system",
                "requestBody": {
                    "description": "Client Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Cat"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/clients/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the client that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get client with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Client with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "404": {
                        "description": "Failed. Client not found."
                    }
                }
            },
            "put": {
                "summary": "Update client with given ID",
                "tags": [
                    "Clients"
                ],
                "requestBody": {
                    "description": "Client Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Cat"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Cat with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cat"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Client not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete client with given ID",
                "tags": [
                    "Clients"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Cat with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "Client": {
            "type": "object",
            "properties": {
                "genus": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "isHungry": {
                    "type": "boolean"
                },
                "lastFedDate": {
                    "type": "string"
                }
            }
        },
        "Clients": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Client"
                    }
                }
            }
        }
    }
}